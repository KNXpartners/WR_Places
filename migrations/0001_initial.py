# Generated by Django 4.0.1 on 2022-01-15 10:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Place2PlaceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Places',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(blank=True, max_length=100, verbose_name='Name of the place')),
                ('Description', models.TextField(blank=True, max_length=100)),
                ('Date', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('DesignNumber', models.SmallIntegerField(blank=True, default=None, help_text='..building, stage or flat from jobsite design', null=True, verbose_name='number of')),
            ],
            options={
                'verbose_name': 'place',
                'verbose_name_plural': 'places',
                'ordering': ('-Date',),
            },
        ),
        migrations.CreateModel(
            name='PlaceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=50, unique=True)),
                ('Abstract', models.BooleanField(default=True)),
                ('Short', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='TestPlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='jobsite',
            fields=[
                ('places_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Places.places')),
                ('Address', models.TextField(blank=True)),
                ('Owner', models.CharField(blank=True, max_length=100, verbose_name='Name of the owner')),
                ('Author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_Author', related_query_name='%(app_label)s_%(class)ss_Author', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
            bases=('Places.places',),
        ),
        migrations.CreateModel(
            name='TestP2P',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Child', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Places_TestP2P_Child', to='Places.testplace')),
                ('Parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Places_TestP2P_Parent', to='Places.testplace')),
            ],
        ),
        migrations.AddField(
            model_name='places',
            name='Type',
            field=models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='Places.placetype', verbose_name='Type of the place'),
        ),
        migrations.CreateModel(
            name='Inheritance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_Child', related_query_name='%(app_label)s_%(class)ss_Child', to='Places.placetype')),
                ('Parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_Parent', related_query_name='%(app_label)s_%(class)ss_Parent', to='Places.placetype')),
            ],
        ),
        migrations.CreateModel(
            name='Place2Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Child', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_Child', related_query_name='%(app_label)s_%(class)ss_Child', to='Places.places', verbose_name='Child Places relation')),
                ('Parent', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_Parent', related_query_name='%(app_label)s_%(class)ss_Parent', to='Places.places', verbose_name='Parent Device2Places relation')),
                ('ParentAbstract', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_AbstractPlace', related_query_name='%(app_label)s_%(class)ss_AbstractPlace', to='Places.places', verbose_name='Parent abstract place')),
                ('Type', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_Type', related_query_name='%(app_label)s_%(class)ss_Type', to='Places.place2placetype', verbose_name='Type of the place')),
                ('jobsite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_js', related_query_name='%(app_label)s_%(class)ss_js', to='Places.jobsite', verbose_name='jobsite')),
            ],
        ),
    ]
